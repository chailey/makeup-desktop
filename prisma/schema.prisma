generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product {
  id       String    @id @unique @db.Uuid
  category String?   @db.VarChar
  type     String?   @db.VarChar
  brand    String?   @db.VarChar
  title    String?   @db.VarChar
  colors   Json?
  image    String?
  reviews  reviews[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model reviewer {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  age        String?
  skin       String?
  eyes       String?
  review_id  String?   @db.Uuid
  product_id String?   @db.Uuid
  reviews    reviews?  @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model reviews {
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  id         String     @id @unique @db.Uuid
  rating     Float?
  comment    String?
  product_id String     @db.Uuid
  reviewer   reviewer[]
  product    product    @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
